{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/enhancementOfNxtTrendzPayment/src/App.js\";\nimport { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport LoginForm from './components/LoginForm';\nimport Home from './components/Home';\nimport Products from './components/Products';\nimport ProductItemDetails from './components/ProductItemDetails';\nimport Cart from './components/Cart';\nimport NotFound from './components/NotFound';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport CartContext from './context/CartContext';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cartList: []\n    };\n    //   TODO: Add your code for remove all cart items, increment cart item quantity, decrement cart item quantity, remove cart item\n    this.addCartItem = product => {\n      const {\n        cartList\n      } = this.state;\n      //   TODO: Update the code here to implement addCartItem\n      // this.setState(prevState => ({cartList: [...prevState.cartList, product]}))\n\n      const findingBasedOnId = cartList.find(eachCart => eachCart.id === product.id);\n      console.log(findingBasedOnId);\n      if (findingBasedOnId) {\n        this.setState(prevState => ({\n          cartList: prevState.cartList.map(each => {\n            if (findingBasedOnId.id === each.id) {\n              const quantityProduct = each.quantity + 1;\n              return {\n                ...each,\n                quantity: quantityProduct\n              };\n            }\n            return each;\n          })\n        }));\n      } else {\n        this.setState(prevState => ({\n          cartList: [...prevState.cartList, product]\n        }));\n      }\n    };\n    this.removeCartItem = id => {\n      const {\n        cartList\n      } = this.state;\n      const removing = cartList.filter(each => each.id !== id);\n      this.setState({\n        cartList: removing\n      });\n    };\n    this.decrementCartItemQuantity = id => {\n      const {\n        cartList\n      } = this.state;\n      const quantityDecreased = cartList.find(each => each.id === id);\n      if (quantityDecreased.quantity > 1) {\n        this.setState(prevState => ({\n          cartList: prevState.cartList.map(each => {\n            if (each.id === id) {\n              const decreasing = each.quantity - 1;\n              return {\n                ...each,\n                quantity: decreasing\n              };\n            }\n            return each;\n          })\n        }));\n      } else {\n        this.removeCartItem(id);\n      }\n    };\n    this.incrementCartItemQuantity = id => {\n      this.setState(prevState => ({\n        cartList: prevState.cartList.map(each => {\n          if (each.id === id) {\n            const increaseQuantity = each.quantity + 1;\n            return {\n              ...each,\n              quantity: increaseQuantity\n            };\n          }\n          return each;\n        })\n      }));\n    };\n    this.removeAllCartItems = () => {\n      this.setState({\n        cartList: []\n      });\n    };\n  }\n  render() {\n    const {\n      cartList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n      value: {\n        cartList,\n        addCartItem: this.addCartItem,\n        removeCartItem: this.removeCartItem,\n        decrementCartItemQuantity: this.decrementCartItemQuantity,\n        incrementCartItemQuantity: this.incrementCartItemQuantity,\n        removeAllCartItems: this.removeAllCartItems\n      },\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: LoginForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/products\",\n          component: Products\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/products/:id\",\n          component: ProductItemDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/cart\",\n          component: Cart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/not-found\",\n          component: NotFound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"not-found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","Route","Switch","Redirect","LoginForm","Home","Products","ProductItemDetails","Cart","NotFound","ProtectedRoute","CartContext","jsxDEV","_jsxDEV","App","constructor","args","state","cartList","addCartItem","product","findingBasedOnId","find","eachCart","id","console","log","setState","prevState","map","each","quantityProduct","quantity","removeCartItem","removing","filter","decrementCartItemQuantity","quantityDecreased","decreasing","incrementCartItemQuantity","increaseQuantity","removeAllCartItems","render","Provider","value","children","exact","path","component","fileName","_jsxFileName","lineNumber","columnNumber","to"],"sources":["/home/workspace/reactjs/coding-practices/enhancementOfNxtTrendzPayment/src/App.js"],"sourcesContent":["import {Component} from 'react'\nimport {Route, Switch, Redirect} from 'react-router-dom'\n\nimport LoginForm from './components/LoginForm'\nimport Home from './components/Home'\nimport Products from './components/Products'\nimport ProductItemDetails from './components/ProductItemDetails'\nimport Cart from './components/Cart'\nimport NotFound from './components/NotFound'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport CartContext from './context/CartContext'\n\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    cartList: [],\n  }\n\n  //   TODO: Add your code for remove all cart items, increment cart item quantity, decrement cart item quantity, remove cart item\n\n  addCartItem = product => {\n    const {cartList} = this.state\n    //   TODO: Update the code here to implement addCartItem\n    // this.setState(prevState => ({cartList: [...prevState.cartList, product]}))\n\n    const findingBasedOnId = cartList.find(\n      eachCart => eachCart.id === product.id,\n    )\n    console.log(findingBasedOnId)\n    if (findingBasedOnId) {\n      this.setState(prevState => ({\n        cartList: prevState.cartList.map(each => {\n          if (findingBasedOnId.id === each.id) {\n            const quantityProduct = each.quantity + 1\n            return {...each, quantity: quantityProduct}\n          }\n          return each\n        }),\n      }))\n    } else {\n      this.setState(prevState => ({cartList: [...prevState.cartList, product]}))\n    }\n  }\n\n  removeCartItem = id => {\n    const {cartList} = this.state\n    const removing = cartList.filter(each => each.id !== id)\n    this.setState({cartList: removing})\n  }\n\n  decrementCartItemQuantity = id => {\n    const {cartList} = this.state\n    const quantityDecreased = cartList.find(each => each.id === id)\n\n    if (quantityDecreased.quantity > 1) {\n      this.setState(prevState => ({\n        cartList: prevState.cartList.map(each => {\n          if (each.id === id) {\n            const decreasing = each.quantity - 1\n            return {...each, quantity: decreasing}\n          }\n          return each\n        }),\n      }))\n    } else {\n      this.removeCartItem(id)\n    }\n  }\n\n  incrementCartItemQuantity = id => {\n    this.setState(prevState => ({\n      cartList: prevState.cartList.map(each => {\n        if (each.id === id) {\n          const increaseQuantity = each.quantity + 1\n          return {...each, quantity: increaseQuantity}\n        }\n        return each\n      }),\n    }))\n  }\n\n  removeAllCartItems = () => {\n    this.setState({cartList: []})\n  }\n\n  render() {\n    const {cartList} = this.state\n\n    return (\n      <CartContext.Provider\n        value={{\n          cartList,\n          addCartItem: this.addCartItem,\n          removeCartItem: this.removeCartItem,\n          decrementCartItemQuantity: this.decrementCartItemQuantity,\n          incrementCartItemQuantity: this.incrementCartItemQuantity,\n          removeAllCartItems: this.removeAllCartItems,\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/login\" component={LoginForm} />\n          <ProtectedRoute exact path=\"/\" component={Home} />\n          <ProtectedRoute exact path=\"/products\" component={Products} />\n          <ProtectedRoute\n            exact\n            path=\"/products/:id\"\n            component={ProductItemDetails}\n          />\n          <ProtectedRoute exact path=\"/cart\" component={Cart} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Redirect to=\"not-found\" />\n        </Switch>\n      </CartContext.Provider>\n    )\n  }\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}